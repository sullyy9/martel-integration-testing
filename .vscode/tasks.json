{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Run Selftest Example",
            "type": "shell",
            "command": "poetry run python martel_printer_test_lib",
            "problemMatcher": []
        },
        {
            "label": "Run Test Suite",
            "type": "shell",
            "command": "poetry",
            "args": [
                "run", "robot",
                "--outputdir", "${workspaceFolder}/output_testsuite_integration",
                "--pythonpath", "${workspaceFolder}/martel_printer_test_library",
                "--variable", "SAMPLE_DIR:${workspaceFolder}/samples",
                "${workspaceFolder}/testsuite_integration"
            ],
            "problemMatcher": []
        },
        {
            "label": "Run PCB Test Suite",
            "type": "shell",
            "command": "poetry",
            "args": [
                "run", "robot",
                "--outputdir", "${workspaceFolder}/output_testsuite_pcb",
                "--pythonpath", "${workspaceFolder}/martel_test_library",
                "${workspaceFolder}/testsuite_pcb"
            ],
            "problemMatcher": []
        },
        {
            "label": "Generate Samples",
            "type": "shell",
            "command": "poetry",
            "args": [
                "run", "robot",
                "--outputdir", "${workspaceFolder}/output_testsuite_samples",
                "--pythonpath", "${workspaceFolder}/martel_printer_test_lib",
                "${workspaceFolder}/testsuite_samples"
            ],
            "problemMatcher": []
        },
        {
            "label": "Run Library Tests",
            "type": "shell",
            "command": "poetry",
            "args": [
                "run", "python",
                "-m", "unittest", "discover",
                "-s", "${workspaceFolder}/martel_printer_test_library"
            ],
            "problemMatcher": []
        },
        {
            "label": "Run Virtual Mech Application",
            "type": "shell",
            "command": "poetry",
            "args": [
                "run",
                "python", "-m",
                "martel_print_mech_analyser"
            ],
            "problemMatcher": []
        }
    ]
}